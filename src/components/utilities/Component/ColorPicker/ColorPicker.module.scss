@use "sass:math";
@use "sass:color";

// Variables
$primary-bg: #f0f0f0;
$shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
$border-radius: 5px;
$spacing: 20px;
$color-border: #ddd;
$text-color: #333;
$text-light: #555;
$transition-duration: 0.2s;

// Mixins
@mixin flex-center {
  display: flex;
  align-items: center;
  justify-content: center;
}

@mixin transition($property: all, $duration: $transition-duration) {
  transition: $property $duration ease-in-out;
}

// Component styles
.container {
  background-color: $primary-bg;
  border-radius: $border-radius;
  box-shadow: $shadow;
  padding: $spacing;
  width: 320px;
  margin: $spacing auto;

  .title {
    text-align: center;
    color: $text-color;
    margin-bottom: $spacing;
    font-size: 24px;
  }
}

.picker {
  .spectrum {
    margin-bottom: $spacing;
    text-align: center;

    .colorInput {
      width: 100%;
      height: 50px;
      border: none;
      cursor: pointer;
      border-radius: math.div($border-radius, 2);
      @include transition;

      &:hover {
        transform: scale(1.02);
      }
    }
  }

  .selected {
    @include flex-center;
    margin-bottom: $spacing;
    gap: math.div($spacing, 1.33); // ~15px

    .display {
      width: 60px;
      height: 60px;
      border-radius: math.div($border-radius, 1.25); // ~8px
      border: 1px solid $color-border;
      @include transition;
    }

    .code {
      font-size: 18px;
      font-weight: bold;
      color: $text-color;
    }
  }

  .presets {
    display: flex;
    flex-direction: column;
    // align-items: center;
    justify-content: center;
    align-content: center;
    /* Căn giữa theo chiều ngang */
    .presetsHeader {
      @include flex-center;
      justify-content: space-between;
      cursor: pointer;
      margin-bottom: math.div($spacing, 2); // 10px
      padding: math.div($spacing, 4); // 5px
      @include transition;

      &:hover {
        background-color: rgba(0, 0, 0, 0.05);
        border-radius: math.div($border-radius, 4); // ~2.5px
      }

      h3 {
        margin: 0;
        color: $text-light;
      }

      .toggleIcon {
        font-size: 12px;
        color: $text-light;
      }
    }


    .grid {
      display: grid;
      grid-template-columns: repeat(5, 1fr); // 5 cột bằng nhau
      gap: 8px; // Khoảng cách giữa các ô
      width: 100%; // Chiếm full chiều rộng
      .presetColor {
        width: 100%; // Chiếm full ô grid
        aspect-ratio: 1; // Tỉ lệ vuông 1:1
        border-radius: 4px;
        cursor: pointer;
        border: 1px solid #ddd;
        transition: transform 0.2s;
        box-sizing: border-box; // Quan trọng: tính cả border vào kích thước
    
        &:hover {
          transform: scale(1.1);
        }
    
        &[data-selected="true"] {
          border: 2px solid #333;
        }
      }
    }

  }
}

// Responsive adjustments
@media (max-width: 360px) {
  .container {
    width: 90%;
    padding: math.div($spacing, 2);

    .picker {
      .selected {
        flex-direction: column;
        align-items: flex-start;
        gap: math.div($spacing, 4);
      }
    }
  }
}